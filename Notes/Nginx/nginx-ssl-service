server {
    listen       80;
    server_name  www.paigestech.com;

    #access_log  /var/log/nginx/host.access.log  main;
    return 301 https://$server_name$request_uri;
    root   /usr/share/nginx/html;
    index  index.html index.htm;
}

server {
    listen 443 ssl;
    server_name  www.paigestech.com;
    
    ssl_certificate /etc/nginx/ssl/chained.crt;
    ssl_certificate_key /etc/nginx/ssl/paigestech.key;
    location / {
            proxy_pass http://127.0.0.1:9999;
            # Redefine the header fields that NGINX sends to the upstream server
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            #proxy_set_header X-Forwarded-For \$remote_addr;
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
    }
    location /webhook/extraction/submit {
            proxy_pass http://127.0.0.1:9999;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \proxy_add_x_forwarded_for;

            proxy_set_header X-Script-Name /webhook/extraction/submit;
            client_max_body_size 5M;
    }
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
